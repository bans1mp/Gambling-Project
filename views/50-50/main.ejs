<% layout('layouts/boilerplate')%>

    <div id="gameOver" class="container" hidden>
        <h1 class="display-4 text-center">GAME OVER</h1>
        <br>

        <div class="col-2 offset-5">
            <div class="row">
                <a href="" type="button" class="btn btn-outline-danger">Retry</a>
            </div>
        </div>
    </div>

    <div id="mainBody">

        <h1 class="text-center">50-50</h1>
        <hr>
        <h2 id="display" class="text-center mt-3">Starting Soon...</h2>
        <hr>

        <form>
            <div class="mt-4 py-4">
                <div class="form-group row">
                    <label for="amount" class="col-sm-2 col-form-label">Amount</label>
                    <div class="col-sm-10">
                        <input type="number" class="form-control" id="amount" placeholder="Amount">
                    </div>
                </div>
            </div>
            <div class="mb-2">
                <fieldset class="form-group">
                    <div class="row">
                        <legend class="col-form-label col-sm-2 pt-0">Choose Option</legend>
                        <div class="col-sm-10">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="bet" id="head" value="head" checked>
                                <label class="form-check-label" for="head">
                                    HEAD
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="bet" id="tail" value="tail">
                                <label class="form-check-label" for="tail">
                                    TAIL
                                </label>
                            </div>

                        </div>
                    </div>
                </fieldset>
            </div>
            <hr>
            <div class="d-flex justify-content-center">
                <button type="button" class="btn btn-secondary mt-3" id="bettingButton"
                    onclick="  currentBetsUpdater(document.getElementById('amount').value) ,cutBalance(document.getElementById('amount').value) , clearInput() ">Place
                    Bet</button>
            </div>
            <hr>
            <div class="d-flex flex-column align-items-center justify-content-center">
                <h3 class="display-6">Amount Left</h3>
                <h3 id="balance" class="mt-4">5000</h3>
                <div class="d-flex flex-row justify-content-center mt-2">

                    <div class="display-5 mr-2 ml-2" id="idA">0</div>

                    <div class="display-5 mr-2 ml-2" id="idB">0</div>


                </div>
            </div>


        </form>

    </div>

    <script>

        const clearInput = () => {
            document.getElementById("amount").value = ""
        }

        const fetchBet = () => {
            let resBet;
            const bets = document.getElementsByName("bet");
            for (let i = 0; i < bets.length; i++) {
                if (bets[i].checked) {
                    resBet = bets[i].value;
                    break;
                }
            }

            return resBet;
        }

        const currentBetsUpdater = (betAmount) => {
            if (betAmount) {
                if (parseFloat(betAmount) > parseFloat(document.getElementById("balance").innerHTML)) {
                    return;
                }
                const selected = fetchBet();
                if (selected == "head") {
                    let current = parseFloat(document.getElementById("idA").innerHTML);
                    let updated = current + parseFloat(betAmount)
                    document.getElementById("idA").innerHTML = updated.toString();
                }
                else {
                    let current = parseFloat(document.getElementById("idB").innerHTML);
                    let updated = current + parseFloat(betAmount)
                    document.getElementById("idB").innerHTML = updated.toString();
                }
            }
        }

        const cutBalance = (amount) => {
            if (amount && parseFloat(amount) <= parseFloat(document.getElementById("balance").textContent)) {
                document.getElementById("balance").textContent = parseFloat(document.getElementById("balance").textContent) - parseFloat(amount)
            }
        }

        const roll = () => {
            const display = document.getElementById("display");
            setInterval(() => {
                display.textContent = "Rolling..."
                document.getElementById("head").disabled = true;
                document.getElementById("tail").disabled = true;

                document.getElementById("bettingButton").disabled = true;

                document.getElementById("amount").value = "";
                document.getElementById("amount").disabled = true;

                setTimeout(() => {
                    display.textContent = updateCoin();

                    if (display.textContent == "HEAD") {
                        addBalance(1);
                    }
                    else if (display.textContent == "TAIL") {
                        addBalance(2)
                    }




                    document.getElementById("head").disabled = false;
                    document.getElementById("tail").disabled = false;

                    document.getElementById("amount").disabled = false;
                    document.getElementById("bettingButton").disabled = false;
                    document.getElementById("idA").innerHTML = "0"
                    document.getElementById("idB").innerHTML = "0"
                    document.getElementById("amount").value = "";
                    if (document.getElementById("balance").textContent == "0") {
                        endGame();
                    }
                }, 5000)
            }, 15000)
        }

        const updateCoin = () => {
            let res;
            const rand = Math.random();
            if (rand <= 0.5) res = "HEAD";
            else res = "TAIL";
            return res;
        }

        const addBalance = (answer) => {
            if (answer == 1) {
                document.getElementById("balance").textContent = parseFloat(document.getElementById("balance").textContent) + 2 * parseFloat(document.getElementById("idA").innerHTML)
            }

            else {
                document.getElementById("balance").textContent = parseFloat(document.getElementById("balance").textContent) + 2 * parseFloat(document.getElementById("idB").innerHTML)
            }
        }

        const endGame = () => {
            setTimeout(() => {
                document.getElementById("mainBody").hidden = true;
                document.getElementById("gameOver").hidden = false;

            }, 3000)
        }

        roll();



    </script>